{"version":3,"sources":["webpack:///./src/components/FormStepSuccess/index.tsx","webpack:///./src/pages/privacy.tsx"],"names":["FlexContainer","styled","div","FormSuccess","HeaderWrapper","FormSuccessHeader","p","color","blue_darker","FormSuccessTitle","h1","blue_17_percent","FormSuccessContent","FlexRow","props","paragraphSpacing","lastRow","FormSuccessParaWrapper","singleColInRow","FormSuccessPara","fullWidthColumn","ContainerFormStep","isFormStepVisible","FormStepIndicatorPositioningDiv","white","FormStepSuccessFormat","heading","title","activateItemProp","fcpContent","map","row","index","isLastRow","length","col1","col2","flexOrder","fullWidth","style","order","className","parse","html","PrivacyPage","data","privacyPage","sectionTitle","description","lang","meta","name","content","sectionHeading","rows"],"mappings":"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","file":"component---src-pages-privacy-tsx-b68669fb28bbc1a403ae.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport color from '../color-css/color';\nimport FormStepIndicator from '../../components/FormStep'\nimport parse from 'html-react-parser';\nimport './index.css'\n\nexport type Props = {\n  isFormStepVisible: boolean\n  fcpContent: object\n  heading?: string | boolean\n  title: string\n}\n\nconst FlexContainer = styled.div`\n  display: flex;\n  max-width: 77.5rem;\n  flex-wrap: wrap;\n`\n\nconst FormSuccess = styled.div`\n  font-family: museo-sans, sans-serif !important;\n  display: flex;\n  flex-direction: column;\n  margin-top: 10.5rem;\n  margin-bottom: 6.25rem;\n  @media only screen and (max-width: 870px) {\n    margin-top:  3.935rem;\n    margin-bottom: 3.125rem;\n  }\n  @media only screen and (max-width: 1299px) {\n    margin-left: 0.938rem;\n    margin-right: 0.938rem;\n  }\n`\n\nconst HeaderWrapper = styled.div`\n  text-align: center;\n  @media only screen and (max-width: 670px) {\n    text-align: left;    \n  }\n`\n\nconst FormSuccessHeader = styled.p`\n  font-family: Intro, sans-serif !important;\n  font-size: 1.125rem;\n  color: ${color.blue_darker};\n  margin-bottom: 0.9375rem;\n  @media only screen and (max-width: 870px) {\n    font-size: 0.9375rem;\n    line-height: 1.375rem;\n    margin-bottom: 0.9375rem;\n  }\n`\n\nconst FormSuccessTitle = styled.h1`\n  font-size: 1.875rem;\n  font-weight: 900;\n  line-height: 2.5rem;\n  margin: 0;\n  color: ${color.blue_17_percent};\n  \n  @media only screen and (max-width: 870px) {\n    margin-bottom: 1.875rem;\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n`\n\nconst FormSuccessContent = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-content: center;\n  grid-column-gap: 0.625rem;\n  grid-row-gap: 3.5rem;\n  margin-top: 4.25rem;\n  @media only screen and (min-width: 1300px) { \n    grid-row-gap: 7.5rem;\n  }\n  @media only screen and (max-width: 870px) {\n    display: flex;\n    flex-direction: column;\n    grid-row-gap: 0;\n    margin-top: 0;\n  }\n`\n\ninterface OneColStyle {\n  singleColInRow?: boolean,\n  fullWidthColumn?: boolean\n}\n\ninterface FlexRowStyle {\n  paragraphSpacing?: boolean,\n  lastRow?: boolean\n}\n\nconst FlexRow = styled.div<FlexRowStyle>`\n  display: flex;\n  flex-wrap: wrap;\n  flex-basis: 100%;\n  justify-content: space-between;\n  margin-bottom: 0;\n\n  @media only screen and (min-width: 871px) {\n    order: unset !important;\n    margin-bottom: ${props => props.paragraphSpacing ? '3.125rem' : props.lastRow ? '0' : '7.5rem'};\n  }\n`\n\nconst FormSuccessParaWrapper = styled.div<OneColStyle>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-basis: ${props => props.singleColInRow ? '100%' : '47.5%'};\n\n  @media only screen and (min-width: 871px) {\n    order: unset !important;\n  }\n  @media only screen and (max-width: 870px) {\n    flex-basis: 100%;\n  }\n\n  img {\n    border-radius: 8px;\n    max-width: 100%;\n    margin: 0px 0px 1.45rem;\n    padding: 0px;\n    border-style: none;\n    max-height: 25rem;\n  }\n`\n\nconst FormSuccessPara = styled.div<OneColStyle>`\n  font-size: 1rem;\n  line-height: 1.75rem;\n  @media only screen and (min-width: 992px) {\n    max-width: ${props => props.fullWidthColumn ? '55.563rem' : '27.563rem'};\n  }\n  @media only screen and (max-width: 1299px) {\n    margin-bottom: ${props => props.fullWidthColumn ? 0 : '3.125rem'};\n    font-size: 0.9375rem;\n    line-height: 1.375rem;\n  }\n`\n\ninterface ContainerFormStep {\n  isFormStepVisible: boolean\n}\n\nconst ContainerFormStep = styled.div<ContainerFormStep>`\n  display: ${props => props.isFormStepVisible ? 'block' : 'none'};\n  position: absolute;\n  margin: auto;\n  left: 0;\n  right: 0;\n  top: 21.5625rem;\n  align-items:'center';\n  width: 52.3125rem;\n  @media screen and (max-width: 870px) {\n    width: 10.8125rem;\n    top: 11.25rem;\n  }\n`\n\nconst FormStepIndicatorPositioningDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 5.9375rem;\n  border-radius: 0.625rem;\n  box-shadow: 0 1.25rem 3.125rem #012F571A;\n  box-sizing: border-box;\n  background-color: ${color.white};\n  @media screen and (max-width: 870px) {\n    height: 2.8125rem;\n    width: 10.8125rem;\n    box-shadow: 0 1.25rem 3.125rem #012F571A;\n    box-sizing: border-box;\n  }\n`\n\nexport const FormStepSuccessFormat: React.FC<Props> = (props: any) => {\n  const { isFormStepVisible } = props\n\n  return (\n    <FormSuccess>\n      <HeaderWrapper>\n        {\n          props?.heading && (\n            <FormSuccessHeader>{props?.heading}</FormSuccessHeader>\n          )\n        }\n        <FormSuccessTitle>{props?.title}</FormSuccessTitle>\n      </HeaderWrapper>\n      <FormSuccessContent>\n        <ContainerFormStep isFormStepVisible={isFormStepVisible}>\n          <FormStepIndicatorPositioningDiv>\n            <FormStepIndicator\n              activateItemProp={4}\n            />\n          </FormStepIndicatorPositioningDiv>\n        </ContainerFormStep>\n        <FlexContainer>\n          {\n            props?.fcpContent?.map((row: any, index: number) => {\n              const isLastRow = props.fcpContent.length - 1 === index\n              if (row?.col1 && row?.col2) {\n                // If the second column in this row is a fullWidth column\n                // and the first is not. The second column's flex order should be first on mobile\n                const flexOrder = row.col1?.fullWidth && !row.col2?.fullWidth ? 2 : 0\n                return (\n                  <FlexRow lastRow={isLastRow}>\n                    <FormSuccessParaWrapper style={{ order: flexOrder }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col1?.fullWidth}>\n                        {parse(`${row.col1.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                    <FormSuccessParaWrapper style={{ order: 1 }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col2?.fullWidth}>\n                        {parse(`${row.col2.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                  </FlexRow>\n                )\n              }\n              if (row?.col1) {\n                return (\n                  <FlexRow paragraphSpacing={true} lastRow={isLastRow}>\n                    <FormSuccessParaWrapper singleColInRow={true} style={{ order: 0 }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col1?.fullWidth}>\n                        {parse(`${row.col1.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                  </FlexRow>\n                )\n              }\n              if (row?.col2) {\n                return (\n                  <FlexRow paragraphSpacing={true} lastRow={isLastRow}>\n                    <FormSuccessParaWrapper singleColInRow={true} style={{ order: 0 }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col2?.fullWidth}>\n                        {parse(`${row.col2.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                  </FlexRow>\n                )\n              }\n            })\n          }\n        </FlexContainer>\n      </FormSuccessContent>\n    </FormSuccess>\n  );\n}\n\nexport default FormStepSuccessFormat;\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport data from '../assets/data/pageData.json'\nimport Layout from '../components/layout'\nimport { FormStepSuccessFormat } from '../components/FormStepSuccess'\nimport SEO from '../components/seo'\n\nconst PrivacyPage = () => {\n  return (\n    <Layout\n      title = {data?.privacyPage?.sectionTitle}\n    >\n      <SEO\n        description={'The SDA is committed to protecting your privacy and providing you with information and services relevant to you.'}\n        lang={'en'}\n        title={'SDA Union | Privacy'}\n        meta={[{\n          name: 'SDA Union | Privacy',\n          content: 'The SDA is committed to protecting your privacy and providing you with information and services relevant to you.'\n        }]}\n      />\n      <FormStepSuccessFormat\n        heading={data?.privacyPage?.sectionHeading}\n        title={data?.privacyPage?.sectionTitle}\n        fcpContent={data?.privacyPage?.rows}\n        isFormStepVisible={false}\n      />\n    </Layout>\n  )\n}\nexport default PrivacyPage\n"],"sourceRoot":""}