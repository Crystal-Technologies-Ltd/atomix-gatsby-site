{"version":3,"sources":["webpack:///./src/pages/join-success.tsx","webpack:///./src/components/FormStepSuccess/index.tsx"],"names":["FormSuccessPage","props","branch","location","state","window","s","document","createElement","type","async","innerHTML","body","appendChild","title","titleSpan","noindex","heading","fcpContent","branchSpecific","rows","isFormStepVisible","FlexContainer","styled","div","FormSuccess","HeaderWrapper","FormSuccessHeader","p","color","blue_darker","FormSuccessTitle","h1","blue_17_percent","FormSuccessContent","FlexRow","paragraphSpacing","lastRow","FormSuccessParaWrapper","singleColInRow","FormSuccessPara","fullWidthColumn","ContainerFormStep","FormStepIndicatorPositioningDiv","white","FormStepSuccessFormat","activateItemProp","map","row","index","isLastRow","length","col1","col2","flexOrder","fullWidth","style","order","className","parse","html"],"mappings":"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","file":"component---src-pages-join-success-tsx-503fd44023ac5446b9e4.js","sourcesContent":["import React from 'react'\nimport FormStepSuccess from '../components/FormStepSuccess/index'\nimport Layout from '../components/layout'\nimport branchSpecific from '../utils/branchSpecificCopy'\nimport SEO from '../components/seo'\n\nconst FormSuccessPage = (props: any) => {\n\n  let branch = props?.location?.state?.branch\n\n  // Success page should redirect back to home path if the branch prop is unset (like it is via direct access to the page)\n  if (typeof branch === 'undefined' && typeof window !== 'undefined') {\n    const s = document.createElement('script')\n    s.type = 'text/javascript'\n    s.async = true\n    s.innerHTML = `window.location.href = '/'`\n    document.body.appendChild(s)\n  }\n\n  return (\n    <Layout\n      title=\"Join the SDA\"\n      titleSpan=\"today\"\n    >\n      <SEO\n        noindex={true}\n      />\n      <FormStepSuccess \n        heading={`WHAT'S NEXT`}\n        title={`Your membership application is complete!`}\n        fcpContent={branchSpecific(branch, 'joinSuccess')?.rows}\n        isFormStepVisible={true}\n      />\n    </Layout>\n  )\n} \n\nexport default FormSuccessPage","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport color from '../color-css/color';\nimport FormStepIndicator from '../../components/FormStep'\nimport parse from 'html-react-parser';\nimport './index.css'\n\nexport type Props = {\n  isFormStepVisible: boolean\n  fcpContent: object\n  heading?: string | boolean\n  title: string\n}\n\nconst FlexContainer = styled.div`\n  display: flex;\n  max-width: 77.5rem;\n  flex-wrap: wrap;\n`\n\nconst FormSuccess = styled.div`\n  font-family: museo-sans, sans-serif !important;\n  display: flex;\n  flex-direction: column;\n  margin-top: 10.5rem;\n  margin-bottom: 6.25rem;\n  @media only screen and (max-width: 870px) {\n    margin-top:  3.935rem;\n    margin-bottom: 3.125rem;\n  }\n  @media only screen and (max-width: 1299px) {\n    margin-left: 0.938rem;\n    margin-right: 0.938rem;\n  }\n`\n\nconst HeaderWrapper = styled.div`\n  text-align: center;\n  @media only screen and (max-width: 768px) {\n    text-align: left;    \n  }\n`\n\nconst FormSuccessHeader = styled.p`\n  font-family: Intro, sans-serif !important;\n  font-size: 1.125rem;\n  color: ${color.blue_darker};\n  margin-bottom: 0.9375rem;\n  @media only screen and (max-width: 870px) {\n    font-size: 0.9375rem;\n    line-height: 1.375rem;\n    margin-bottom: 0.9375rem;\n  }\n`\n\nconst FormSuccessTitle = styled.h1`\n  font-size: 1.875rem;\n  font-weight: 900;\n  line-height: 2.5rem;\n  margin: 0;\n  color: ${color.blue_17_percent};\n  \n  @media only screen and (max-width: 870px) {\n    margin-bottom: 1.875rem;\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n`\n\nconst FormSuccessContent = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-content: center;\n  grid-column-gap: 0.625rem;\n  grid-row-gap: 3.5rem;\n  margin-top: 4.25rem;\n  @media only screen and (min-width: 1300px) { \n    grid-row-gap: 7.5rem;\n  }\n  @media only screen and (max-width: 870px) {\n    display: flex;\n    flex-direction: column;\n    grid-row-gap: 0;\n    margin-top: 0;\n  }\n`\n\ninterface OneColStyle {\n  singleColInRow?: boolean,\n  fullWidthColumn?: boolean\n}\n\ninterface FlexRowStyle {\n  paragraphSpacing?: boolean,\n  lastRow?: boolean\n}\n\nconst FlexRow = styled.div<FlexRowStyle>`\n  display: flex;\n  flex-wrap: wrap;\n  flex-basis: 100%;\n  justify-content: space-between;\n  margin-bottom: 0;\n\n  @media only screen and (min-width: 871px) {\n    order: unset !important;\n    margin-bottom: ${props => props.paragraphSpacing ? '3.125rem' : props.lastRow ? '0' : '7.5rem'};\n  }\n`\n\nconst FormSuccessParaWrapper = styled.div<OneColStyle>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-basis: ${props => props.singleColInRow ? '100%' : '47.5%'};\n\n  @media only screen and (min-width: 871px) {\n    order: unset !important;\n  }\n  @media only screen and (max-width: 870px) {\n    flex-basis: 100%;\n  }\n\n  img {\n    border-radius: 8px;\n    max-width: 100%;\n    margin: 0px 0px 1.45rem;\n    padding: 0px;\n    border-style: none;\n    max-height: 25rem;\n  }\n`\n\nconst FormSuccessPara = styled.div<OneColStyle>`\n  font-size: 1rem;\n  line-height: 1.75rem;\n  @media only screen and (min-width: 992px) {\n    max-width: ${props => props.fullWidthColumn ? '55.563rem' : '27.563rem'};\n  }\n  @media only screen and (max-width: 1299px) {\n    margin-bottom: ${props => props.fullWidthColumn ? 0 : '3.125rem'};\n    font-size: 0.9375rem;\n    line-height: 1.375rem;\n  }\n`\n\ninterface ContainerFormStep {\n  isFormStepVisible: boolean\n}\n\nconst ContainerFormStep = styled.div<ContainerFormStep>`\n  display: ${props => props.isFormStepVisible ? 'block' : 'none'};\n  position: absolute;\n  margin: auto;\n  left: 0;\n  right: 0;\n  top: 21.5625rem;\n  align-items:'center';\n  width: 52.3125rem;\n  @media screen and (max-width: 870px) {\n    width: 10.8125rem;\n    top: 11.25rem;\n  }\n`\n\nconst FormStepIndicatorPositioningDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 5.9375rem;\n  border-radius: 0.625rem;\n  box-shadow: 0 1.25rem 3.125rem #012F571A;\n  box-sizing: border-box;\n  background-color: ${color.white};\n  @media screen and (max-width: 870px) {\n    height: 2.8125rem;\n    width: 10.8125rem;\n    box-shadow: 0 1.25rem 3.125rem #012F571A;\n    box-sizing: border-box;\n  }\n`\n\nexport const FormStepSuccessFormat: React.FC<Props> = (props: any) => {\n  const { isFormStepVisible } = props\n\n  return (\n    <FormSuccess>\n      <HeaderWrapper>\n        {\n          props?.heading && (\n            <FormSuccessHeader>{props?.heading}</FormSuccessHeader>\n          )\n        }\n        <FormSuccessTitle>{props?.title}</FormSuccessTitle>\n      </HeaderWrapper>\n      <FormSuccessContent>\n        <ContainerFormStep isFormStepVisible={isFormStepVisible}>\n          <FormStepIndicatorPositioningDiv>\n            <FormStepIndicator\n              activateItemProp={4}\n            />\n          </FormStepIndicatorPositioningDiv>\n        </ContainerFormStep>\n        <FlexContainer>\n          {\n            props?.fcpContent?.map((row: any, index: number) => {\n              const isLastRow = props.fcpContent.length - 1 === index\n              if (row?.col1 && row?.col2) {\n                // If the second column in this row is a fullWidth column\n                // and the first is not. The second column's flex order should be first on mobile\n                const flexOrder = row.col1?.fullWidth && !row.col2?.fullWidth ? 2 : 0\n                return (\n                  <FlexRow lastRow={isLastRow}>\n                    <FormSuccessParaWrapper style={{ order: flexOrder }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col1?.fullWidth}>\n                        {parse(`${row.col1.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                    <FormSuccessParaWrapper style={{ order: 1 }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col2?.fullWidth}>\n                        {parse(`${row.col2.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                  </FlexRow>\n                )\n              }\n              if (row?.col1) {\n                return (\n                  <FlexRow paragraphSpacing={true} lastRow={isLastRow}>\n                    <FormSuccessParaWrapper singleColInRow={true} style={{ order: 0 }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col1?.fullWidth}>\n                        {parse(`${row.col1.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                  </FlexRow>\n                )\n              }\n              if (row?.col2) {\n                return (\n                  <FlexRow paragraphSpacing={true} lastRow={isLastRow}>\n                    <FormSuccessParaWrapper singleColInRow={true} style={{ order: 0 }}>\n                      <FormSuccessPara className='content-data-css' fullWidthColumn={row.col2?.fullWidth}>\n                        {parse(`${row.col2.html}`)}\n                      </FormSuccessPara>\n                    </FormSuccessParaWrapper>\n                  </FlexRow>\n                )\n              }\n            })\n          }\n        </FlexContainer>\n      </FormSuccessContent>\n    </FormSuccess>\n  );\n}\n\nexport default FormStepSuccessFormat;\n"],"sourceRoot":""}